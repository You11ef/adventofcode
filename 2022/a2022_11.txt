# Part 1:

with open("input.txt", "r") as f:
    l = list(map(lambda x: x.rstrip(), f.readlines()))
    m = [l[7 * i:6 + 7 * i] for i in range(8)]

inspect = [0 for _ in range(len(m))]

def refact1(s):
    if s[-1] == ",":
        return int(s[:-1])
    return int(s)


def refact2(s):
    try:
        return int(s)
    except ValueError:
        return s


def calculator(s, old):
    if isinstance(s[2], str):
        return old * old
    else:
        return old * s[2] * int(s[1] == "*") + (old + s[2]) * int(s[1] == "+")


def refactor(l):
    l.pop(0)
    l[0] = list(map(refact1, l[0].split()[2:]))
    l[1] = list(map(refact2, l[1].split()[3:]))
    l[2] = int(l[2].split()[-1])
    l[3] = int(l[3].split()[-1])
    l[4] = int(l[4].split()[-1])
    return l


m = list(map(refactor, m))


def monkey(n):
    global m, inspect
    l = m[n]
    inspect[n] += len(l[0])
    for _ in range(len(l[0])):
        x = calculator(l[1], l[0].pop(0))//3
        if x % l[2] == 0:
            m[l[3]][0].append(x)
        else:
            m[l[4]][0].append(x)

for _ in range(20):
    for i in range(8):
        monkey(i)

inspect.sort()
print(inspect[-1]*inspect[-2])


# Part 2 : 

